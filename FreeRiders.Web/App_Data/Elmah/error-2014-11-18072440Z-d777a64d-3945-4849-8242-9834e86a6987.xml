<error errorId="d777a64d-3945-4849-8242-9834e86a6987" application="/LM/W3SVC/231/ROOT" host="YASENPC" type="Ninject.ActivationException" message="Error activating IUserStore{User}&#xD;&#xA;No matching bindings are available, and the type is not self-bindable.&#xD;&#xA;Activation path:&#xD;&#xA;  3) Injection of dependency IUserStore{User} into parameter store of constructor of type ApplicationUserManager&#xD;&#xA;  2) Injection of dependency ApplicationUserManager into parameter userManager of constructor of type AccountController&#xD;&#xA;  1) Request for AccountController&#xD;&#xA;&#xD;&#xA;Suggestions:&#xD;&#xA;  1) Ensure that you have defined a binding for IUserStore{User}.&#xD;&#xA;  2) If the binding was defined in a module, ensure that the module has been loaded into the kernel.&#xD;&#xA;  3) Ensure you have not accidentally created more than one kernel.&#xD;&#xA;  4) If you are using constructor arguments, ensure that the parameter name matches the constructors parameter name.&#xD;&#xA;  5) If you are using automatic module loading, ensure the search path and filters are correct.&#xD;&#xA;" source="Ninject" detail="System.InvalidOperationException: An error occurred when trying to create a controller of type 'FreeRiders.Web.Controllers.AccountController'. Make sure that the controller has a parameterless public constructor. ---&gt; Ninject.ActivationException: Error activating IUserStore{User}&#xD;&#xA;No matching bindings are available, and the type is not self-bindable.&#xD;&#xA;Activation path:&#xD;&#xA;  3) Injection of dependency IUserStore{User} into parameter store of constructor of type ApplicationUserManager&#xD;&#xA;  2) Injection of dependency ApplicationUserManager into parameter userManager of constructor of type AccountController&#xD;&#xA;  1) Request for AccountController&#xD;&#xA;&#xD;&#xA;Suggestions:&#xD;&#xA;  1) Ensure that you have defined a binding for IUserStore{User}.&#xD;&#xA;  2) If the binding was defined in a module, ensure that the module has been loaded into the kernel.&#xD;&#xA;  3) Ensure you have not accidentally created more than one kernel.&#xD;&#xA;  4) If you are using constructor arguments, ensure that the parameter name matches the constructors parameter name.&#xD;&#xA;  5) If you are using automatic module loading, ensure the search path and filters are correct.&#xD;&#xA;&#xD;&#xA;   at Ninject.KernelBase.Resolve(IRequest request)&#xD;&#xA;   at Ninject.Planning.Targets.Target`1.GetValue(Type service, IContext parent)&#xD;&#xA;   at Ninject.Planning.Targets.Target`1.ResolveWithin(IContext parent)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.GetValue(IContext context, ITarget target)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.&lt;&gt;c__DisplayClass4.&lt;Create&gt;b__2(ITarget target)&#xD;&#xA;   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()&#xD;&#xA;   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)&#xD;&#xA;   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.Create(IContext context)&#xD;&#xA;   at Ninject.Activation.Context.ResolveInternal(Object scope)&#xD;&#xA;   at Ninject.Activation.Context.Resolve()&#xD;&#xA;   at Ninject.KernelBase.&lt;&gt;c__DisplayClass15.&lt;Resolve&gt;b__f(IBinding binding)&#xD;&#xA;   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()&#xD;&#xA;   at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source)&#xD;&#xA;   at Ninject.Planning.Targets.Target`1.GetValue(Type service, IContext parent)&#xD;&#xA;   at Ninject.Planning.Targets.Target`1.ResolveWithin(IContext parent)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.GetValue(IContext context, ITarget target)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.&lt;&gt;c__DisplayClass4.&lt;Create&gt;b__2(ITarget target)&#xD;&#xA;   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()&#xD;&#xA;   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)&#xD;&#xA;   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)&#xD;&#xA;   at Ninject.Activation.Providers.StandardProvider.Create(IContext context)&#xD;&#xA;   at Ninject.Activation.Context.ResolveInternal(Object scope)&#xD;&#xA;   at Ninject.Activation.Context.Resolve()&#xD;&#xA;   at Ninject.KernelBase.&lt;&gt;c__DisplayClass15.&lt;Resolve&gt;b__f(IBinding binding)&#xD;&#xA;   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()&#xD;&#xA;   at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source)&#xD;&#xA;   at Ninject.Web.Mvc.NinjectDependencyResolver.GetService(Type serviceType)&#xD;&#xA;   at Castle.Proxies.Invocations.IDependencyResolver_GetService.InvokeMethodOnTarget()&#xD;&#xA;   at Castle.DynamicProxy.AbstractInvocation.Proceed()&#xD;&#xA;   at Glimpse.Core.Extensibility.CastleInvocationToAlternateMethodContextAdapter.Proceed()&#xD;&#xA;   at Glimpse.Core.Extensibility.ExecutionTimer.Time(Action action)&#xD;&#xA;   at Glimpse.Core.Extensions.AlternateMethodContextExtensions.TryProceedWithTimer(IAlternateMethodContext context, TimerResult&amp; timerResult)&#xD;&#xA;   at Glimpse.Core.Extensibility.AlternateMethod.NewImplementation(IAlternateMethodContext context)&#xD;&#xA;   at Glimpse.Core.Extensibility.AlternateTypeToCastleInterceptorAdapter.Intercept(IInvocation invocation)&#xD;&#xA;   at Castle.DynamicProxy.AbstractInvocation.Proceed()&#xD;&#xA;   at Castle.Proxies.IDependencyResolverProxy.GetService(Type serviceType)&#xD;&#xA;   at System.Web.Mvc.DefaultControllerFactory.DefaultControllerActivator.Create(RequestContext requestContext, Type controllerType)&#xD;&#xA;   --- End of inner exception stack trace ---&#xD;&#xA;   at System.Web.Mvc.DefaultControllerFactory.DefaultControllerActivator.Create(RequestContext requestContext, Type controllerType)&#xD;&#xA;   at System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(RequestContext requestContext, Type controllerType)&#xD;&#xA;   at System.Web.Mvc.DefaultControllerFactory.CreateController(RequestContext requestContext, String controllerName)&#xD;&#xA;   at Castle.Proxies.Invocations.IControllerFactory_CreateController.InvokeMethodOnTarget()&#xD;&#xA;   at Castle.DynamicProxy.AbstractInvocation.Proceed()&#xD;&#xA;   at Glimpse.Core.Extensibility.CastleInvocationToAlternateMethodContextAdapter.Proceed()&#xD;&#xA;   at Glimpse.Core.Extensibility.ExecutionTimer.Time(Action action)&#xD;&#xA;   at Glimpse.Core.Extensions.AlternateMethodContextExtensions.TryProceedWithTimer(IAlternateMethodContext context, TimerResult&amp; timerResult)&#xD;&#xA;   at Glimpse.Core.Extensibility.AlternateMethod.NewImplementation(IAlternateMethodContext context)&#xD;&#xA;   at Glimpse.Core.Extensibility.AlternateTypeToCastleInterceptorAdapter.Intercept(IInvocation invocation)&#xD;&#xA;   at Castle.DynamicProxy.AbstractInvocation.Proceed()&#xD;&#xA;   at Castle.Proxies.IControllerFactoryProxy.CreateController(RequestContext requestContext, String controllerName)&#xD;&#xA;   at System.Web.Mvc.MvcHandler.ProcessRequestInit(HttpContextBase httpContext, IController&amp; controller, IControllerFactory&amp; factory)&#xD;&#xA;   at System.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContextBase httpContext, AsyncCallback callback, Object state)&#xD;&#xA;   at System.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContext httpContext, AsyncCallback callback, Object state)&#xD;&#xA;   at System.Web.Mvc.MvcHandler.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext context, AsyncCallback cb, Object extraData)&#xD;&#xA;   at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()&#xD;&#xA;   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously)" time="2014-11-18T07:24:40.7783214Z">
  <serverVariables>
    <item name="ALL_HTTP">
      <value string="HTTP_CONNECTION:keep-alive&#xD;&#xA;HTTP_ACCEPT:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#xD;&#xA;HTTP_ACCEPT_ENCODING:gzip,deflate,sdch&#xD;&#xA;HTTP_ACCEPT_LANGUAGE:en-US,en;q=0.8,bg;q=0.6&#xD;&#xA;HTTP_COOKIE:glimpsePolicy=On; glimpseId=Chrome 38.0&#xD;&#xA;HTTP_HOST:localhost:62576&#xD;&#xA;HTTP_REFERER:http://localhost:62576/&#xD;&#xA;HTTP_USER_AGENT:Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36&#xD;&#xA;" />
    </item>
    <item name="ALL_RAW">
      <value string="Connection: keep-alive&#xD;&#xA;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#xD;&#xA;Accept-Encoding: gzip,deflate,sdch&#xD;&#xA;Accept-Language: en-US,en;q=0.8,bg;q=0.6&#xD;&#xA;Cookie: glimpsePolicy=On; glimpseId=Chrome 38.0&#xD;&#xA;Host: localhost:62576&#xD;&#xA;Referer: http://localhost:62576/&#xD;&#xA;User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36&#xD;&#xA;" />
    </item>
    <item name="APPL_MD_PATH">
      <value string="/LM/W3SVC/231/ROOT" />
    </item>
    <item name="APPL_PHYSICAL_PATH">
      <value string="C:\Users\Yasen\Documents\GitHub\Freeriders\FreeRiders.Web\" />
    </item>
    <item name="AUTH_TYPE">
      <value string="" />
    </item>
    <item name="AUTH_USER">
      <value string="" />
    </item>
    <item name="AUTH_PASSWORD">
      <value string="" />
    </item>
    <item name="LOGON_USER">
      <value string="" />
    </item>
    <item name="REMOTE_USER">
      <value string="" />
    </item>
    <item name="CERT_COOKIE">
      <value string="" />
    </item>
    <item name="CERT_FLAGS">
      <value string="" />
    </item>
    <item name="CERT_ISSUER">
      <value string="" />
    </item>
    <item name="CERT_KEYSIZE">
      <value string="" />
    </item>
    <item name="CERT_SECRETKEYSIZE">
      <value string="" />
    </item>
    <item name="CERT_SERIALNUMBER">
      <value string="" />
    </item>
    <item name="CERT_SERVER_ISSUER">
      <value string="" />
    </item>
    <item name="CERT_SERVER_SUBJECT">
      <value string="" />
    </item>
    <item name="CERT_SUBJECT">
      <value string="" />
    </item>
    <item name="CONTENT_LENGTH">
      <value string="0" />
    </item>
    <item name="CONTENT_TYPE">
      <value string="" />
    </item>
    <item name="GATEWAY_INTERFACE">
      <value string="CGI/1.1" />
    </item>
    <item name="HTTPS">
      <value string="off" />
    </item>
    <item name="HTTPS_KEYSIZE">
      <value string="" />
    </item>
    <item name="HTTPS_SECRETKEYSIZE">
      <value string="" />
    </item>
    <item name="HTTPS_SERVER_ISSUER">
      <value string="" />
    </item>
    <item name="HTTPS_SERVER_SUBJECT">
      <value string="" />
    </item>
    <item name="INSTANCE_ID">
      <value string="231" />
    </item>
    <item name="INSTANCE_META_PATH">
      <value string="/LM/W3SVC/231" />
    </item>
    <item name="LOCAL_ADDR">
      <value string="::1" />
    </item>
    <item name="PATH_INFO">
      <value string="/Account/Login" />
    </item>
    <item name="PATH_TRANSLATED">
      <value string="C:\Users\Yasen\Documents\GitHub\Freeriders\FreeRiders.Web\Account\Login" />
    </item>
    <item name="QUERY_STRING">
      <value string="" />
    </item>
    <item name="REMOTE_ADDR">
      <value string="::1" />
    </item>
    <item name="REMOTE_HOST">
      <value string="::1" />
    </item>
    <item name="REMOTE_PORT">
      <value string="50345" />
    </item>
    <item name="REQUEST_METHOD">
      <value string="GET" />
    </item>
    <item name="SCRIPT_NAME">
      <value string="/Account/Login" />
    </item>
    <item name="SERVER_NAME">
      <value string="localhost" />
    </item>
    <item name="SERVER_PORT">
      <value string="62576" />
    </item>
    <item name="SERVER_PORT_SECURE">
      <value string="0" />
    </item>
    <item name="SERVER_PROTOCOL">
      <value string="HTTP/1.1" />
    </item>
    <item name="SERVER_SOFTWARE">
      <value string="Microsoft-IIS/8.0" />
    </item>
    <item name="URL">
      <value string="/Account/Login" />
    </item>
    <item name="HTTP_CONNECTION">
      <value string="keep-alive" />
    </item>
    <item name="HTTP_ACCEPT">
      <value string="text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8" />
    </item>
    <item name="HTTP_ACCEPT_ENCODING">
      <value string="gzip,deflate,sdch" />
    </item>
    <item name="HTTP_ACCEPT_LANGUAGE">
      <value string="en-US,en;q=0.8,bg;q=0.6" />
    </item>
    <item name="HTTP_COOKIE">
      <value string="glimpsePolicy=On; glimpseId=Chrome 38.0" />
    </item>
    <item name="HTTP_HOST">
      <value string="localhost:62576" />
    </item>
    <item name="HTTP_REFERER">
      <value string="http://localhost:62576/" />
    </item>
    <item name="HTTP_USER_AGENT">
      <value string="Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36" />
    </item>
  </serverVariables>
  <cookies>
    <item name="glimpsePolicy">
      <value string="On" />
    </item>
    <item name="glimpseId">
      <value string="Chrome 38.0" />
    </item>
  </cookies>
</error>